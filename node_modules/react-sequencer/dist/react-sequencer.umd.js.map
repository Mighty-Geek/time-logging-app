{"version":3,"file":"react-sequencer.umd.js","sources":["../src/types.ts","../src/ticker.ts","../src/sequencer.ts","../src/with-sequencer.tsx","../src/sequencer-wrapper.tsx","../src/transition.tsx"],"sourcesContent":["export enum PlayStatus {\n  IDLE = 'STATUS_IDLE',\n  PLAYING = 'STATUS_PLAYING'\n}\n\nexport type EndMode = 'loop' | 'end' | 'start'\n\n/**** Ticker */\n\nexport type TickerNotifyFunction = (timestamp: number) => void\n\n/**** Sequencer */\n\nexport type StepInput = [string, number]\n\nexport type StepsInput = Array<StepInput>\n\nexport interface OptionsInput {\n  steps: StepsInput\n  loop?: boolean\n  complete?: boolean\n  endMode?: EndMode\n}\n\nexport interface Options {\n  steps: StepsInput\n  loop: boolean\n  complete: boolean\n  endMode: EndMode\n}\n\nexport interface Step {\n  startPos: number\n  endPos: number\n  name: string\n}\n\nexport type Steps = Array<Step>\n\nexport type NotifyFunction = (state: SequencerState) => void\n\nexport type Subscriptions = Array<NotifyFunction>\n\nexport interface SequencerState {\n  current: string\n  index: number\n  isPlaying: boolean\n  isComplete: boolean\n}\n\n/*** WithSequencer */\n\nexport interface WithSequencerProps extends OptionsInput {\n  shouldPlayOnUpdate?: { (currProps: any, nextProps: any): boolean }\n  shouldStopOnUpdate?: { (currProps: any, nextProps: any): boolean }\n  shouldCompleteOnUpdate?: { (currProps: any, nextProps: any): boolean }\n}\n\nexport interface InjectedAPI {\n  play(): void\n  complete(): void\n  stop(): void\n  pause(): void\n  isBefore(name: string): boolean\n  isAfter(name: string): boolean\n}\n\nexport interface InjectedProps {\n  sequencer: InjectedAPI & SequencerState\n}\n","import { TickerNotifyFunction } from './types'\n\nlet onNextTick: Function\nlet cancelNextTick: Function\n\nif (\n  typeof window !== 'undefined' &&\n  typeof window.requestAnimationFrame === 'function'\n) {\n  onNextTick = window.requestAnimationFrame\n  cancelNextTick = window.cancelAnimationFrame\n} else if (typeof setTimeout === 'function') {\n  onNextTick = (func: Function) => setTimeout(func, 15)\n  cancelNextTick = clearTimeout\n} else {\n  throw new Error(\n    'React sequencer depends on requestAnimationFrame, please use a polyfill if not available in the browser.'\n  )\n}\n\nclass Ticker {\n  currentTimeStamp: number\n  isActive: boolean\n  requestID: string | null\n  subscriptions: Array<TickerNotifyFunction>\n  constructor() {\n    this.currentTimeStamp = Date.now()\n    this.isActive = false\n    this.requestID = null\n    this.subscriptions = []\n  }\n\n  startLoop = () => {\n    if (!this.isActive) {\n      this.isActive = true\n      this.currentTimeStamp = Date.now()\n      this.requestID = onNextTick(this._onLoop)\n    }\n  }\n\n  stopLoop = () => {\n    if (this.isActive) {\n      this.isActive = false\n      cancelNextTick(this.requestID)\n    }\n  }\n\n  onTick(fn: TickerNotifyFunction) {\n    if (this.subscriptions.length === 0) {\n      this.startLoop()\n    }\n    this.subscriptions.push(fn)\n  }\n\n  offTick(fn: TickerNotifyFunction) {\n    const index = this.subscriptions.indexOf(fn)\n    if (index !== -1) {\n      this.subscriptions.splice(index, 1)\n    }\n    if (this.subscriptions.length === 0) {\n      this.stopLoop()\n    }\n  }\n\n  _onLoop = () => {\n    this.currentTimeStamp = Date.now()\n    for (let i = 0; i < this.subscriptions.length; i++) {\n      const fn = this.subscriptions[i]\n      fn(this.currentTimeStamp)\n    }\n    if (this.isActive) {\n      this.requestID = onNextTick(this._onLoop)\n    }\n  }\n}\n\nexport default Ticker\n","import {\n  PlayStatus,\n  StepsInput,\n  Steps,\n  OptionsInput,\n  Subscriptions,\n  SequencerState,\n  NotifyFunction,\n  EndMode,\n  Options\n} from './types'\n\nimport Ticker from './ticker'\n\nconst ticker = new Ticker()\n\nclass Sequencer {\n  steps: Steps\n  currentStepIndex: number\n  currentTimeIn: number\n  totalDuration: number\n  endMode: EndMode\n  status: PlayStatus\n  requestID: string | null\n  subscriptions: Subscriptions\n  startedAt: number\n  constructor(props: OptionsInput) {\n    const defaults: Options = {\n      steps: [],\n      loop: false,\n      complete: false,\n      endMode: 'end'\n    }\n    const options = Object.assign({}, defaults, props)\n    this.steps = this.generateSteps(options.steps)\n    this.totalDuration = this.steps[this.steps.length - 1].endPos\n    this.currentStepIndex = 0\n    this.currentTimeIn = 0\n    this.startedAt = 0\n    this.endMode = options.loop ? 'loop' : options.endMode\n    this.status = PlayStatus.IDLE\n    this.requestID = null\n    this.subscriptions = []\n\n    if (options.complete === true) {\n      this.complete()\n    }\n  }\n\n  private generateSteps(stepsInput: StepsInput): Steps {\n    if (!stepsInput) {\n      throw new Error('Invalid format.')\n    }\n\n    let prev = 0\n\n    const steps = stepsInput.map(step => {\n      if (!Array.isArray(step) || step.length !== 2) {\n        throw new Error('Invalid format. See docs for correct structure.')\n      }\n\n      const startPos = prev\n      const endPos = step[1] + prev\n      prev = endPos\n      return {\n        startPos,\n        endPos,\n        name: step[0]\n      }\n    })\n\n    return steps\n  }\n\n  private onLoop = (now: number) => {\n    if (this.status !== PlayStatus.PLAYING) {\n      return\n    }\n    this.currentTimeIn = now - this.startedAt\n    const currentStep = this.getCurrentStep()\n    const completesAt = currentStep.endPos\n\n    if (this.currentTimeIn >= completesAt) {\n      if (this.currentStepIndex === this.steps.length - 1) {\n        if (this.endMode === 'start') {\n          this.stop()\n          return\n        }\n        if (this.endMode === 'end') {\n          this.complete()\n          return\n        }\n        if (this.endMode === 'loop') {\n          this.startedAt = now\n          this.goToStepByIndex(0)\n        }\n      } else {\n        this.currentStepIndex++\n        this.notifyChange()\n      }\n    }\n  }\n\n  private notifyChange(): void {\n    const state = this.getState()\n\n    this.subscriptions.forEach(fn => {\n      fn(state)\n    })\n  }\n\n  goToStepByIndex(index: number) {\n    this.currentStepIndex = index\n    this.currentTimeIn = this.steps[index].startPos\n  }\n\n  getCurrentStep() {\n    return this.steps[this.currentStepIndex]\n  }\n\n  onChange = (fn: NotifyFunction) => {\n    this.subscriptions.push(fn)\n  }\n\n  play = () => {\n    if (this.status === PlayStatus.PLAYING) {\n      return\n    }\n\n    if (this.isComplete()) {\n      this.goToStepByIndex(0)\n    }\n    this.status = PlayStatus.PLAYING\n    ticker.onTick(this.onLoop)\n    this.startedAt = ticker.currentTimeStamp - this.currentTimeIn\n    this.notifyChange()\n  }\n\n  pause = () => {\n    if (this.status === PlayStatus.PLAYING) {\n      this.status = PlayStatus.IDLE\n      ticker.offTick(this.onLoop)\n      this.notifyChange()\n    }\n  }\n\n  stop = () => {\n    this.goToStepByIndex(0)\n    this.status = PlayStatus.IDLE\n    ticker.offTick(this.onLoop)\n    this.notifyChange()\n  }\n\n  complete = () => {\n    this.currentStepIndex = this.steps.length - 1\n    this.currentTimeIn = this.totalDuration\n    this.status = PlayStatus.IDLE\n    ticker.offTick(this.onLoop)\n    this.notifyChange()\n  }\n\n  isComplete = () => {\n    return this.currentTimeIn >= this.totalDuration\n  }\n\n  isPlaying = () => {\n    return this.status === PlayStatus.PLAYING\n  }\n\n  isBefore = (stepName: string): boolean => {\n    const stepIndex = this.steps.findIndex(step => step.name === stepName)\n    if (stepIndex === -1) {\n      throw new Error(`Sequencer step ${stepName} not found.`)\n    }\n    return this.currentStepIndex < stepIndex\n  }\n\n  isAfter = (stepName: string): boolean => {\n    const stepIndex = this.steps.findIndex(step => step.name === stepName)\n    if (stepIndex === -1) {\n      throw new Error(`Sequencer step ${stepName} not found.`)\n    }\n    return this.currentStepIndex > stepIndex\n  }\n\n  getState = () => {\n    const state: SequencerState = {\n      current: this.steps[this.currentStepIndex].name,\n      index: this.currentStepIndex,\n      isPlaying: this.isPlaying(),\n      isComplete: this.isComplete()\n    }\n\n    return state\n  }\n}\n\nexport default Sequencer\n","import * as React from 'react'\nimport Sequencer from './sequencer'\nimport {\n  WithSequencerProps,\n  SequencerState,\n  InjectedAPI,\n  InjectedProps\n} from './types'\nimport { Subtract } from 'utility-types'\n\nconst defaultOptions: WithSequencerProps = {\n  steps: [],\n  loop: false,\n  endMode: 'end',\n  complete: false\n}\n\nconst withSequencer = function(options?: WithSequencerProps) {\n  return function<BaseProps extends InjectedProps>(\n    Component: React.ComponentType<BaseProps>\n  ) {\n    type HocProps = Subtract<BaseProps, InjectedProps> & WithSequencerProps\n    return class SequencerWrapper extends React.Component<\n      HocProps,\n      InjectedProps\n    > {\n      sequencer: Sequencer\n\n      static defaultProps = options\n        ? Object.assign({}, defaultOptions, options)\n        : defaultOptions\n\n      constructor(props: HocProps) {\n        super(props)\n        const { steps, loop, complete, endMode } = props\n        this.sequencer = new Sequencer({ steps, loop, complete, endMode })\n        const sequencerState = this.sequencer.getState()\n        const sequencerApi = this.getApi()\n        this.state = {\n          sequencer: Object.assign(sequencerState, sequencerApi)\n        }\n        this.sequencer.onChange(this.handleChange)\n      }\n\n      componentWillReceiveProps(nextProps: HocProps) {\n        const {\n          shouldPlayOnUpdate,\n          shouldStopOnUpdate,\n          shouldCompleteOnUpdate\n        } = this.props\n\n        if (\n          shouldCompleteOnUpdate &&\n          shouldCompleteOnUpdate(this.props, nextProps)\n        ) {\n          this.sequencer.complete()\n        }\n        if (shouldStopOnUpdate && shouldStopOnUpdate(this.props, nextProps)) {\n          this.sequencer.stop()\n        }\n        if (shouldPlayOnUpdate && shouldPlayOnUpdate(this.props, nextProps)) {\n          this.sequencer.play()\n        }\n      }\n\n      getApi(): InjectedAPI {\n        return {\n          play: this.sequencer.play,\n          stop: this.sequencer.stop,\n          pause: this.sequencer.pause,\n          complete: this.sequencer.complete,\n          isBefore: this.sequencer.isBefore,\n          isAfter: this.sequencer.isAfter\n        }\n      }\n\n      handleChange = (sequencerState: SequencerState) => {\n        const sequencer = Object.assign(sequencerState, this.getApi())\n        this.setState({\n          sequencer\n        })\n      }\n\n      render() {\n        const {\n          steps,\n          loop,\n          complete,\n          shouldPlayOnUpdate,\n          shouldStopOnUpdate,\n          shouldCompleteOnUpdate,\n          ...props\n        } = this.props\n\n        return <Component {...props as any} sequencer={this.state.sequencer} />\n      }\n    }\n  }\n}\n\nexport default withSequencer\n","import React, { ReactElement } from 'react'\nimport withSequencer from './with-sequencer'\nimport { SequencerState, InjectedAPI, InjectedProps } from './types'\n\ninterface Props extends InjectedProps {\n  children(sequencer: InjectedAPI & SequencerState): ReactElement\n}\n\nconst SequencerWrapper: React.FunctionComponent<Props> = ({\n  children,\n  sequencer\n}) => children(sequencer)\n\nexport default withSequencer()(SequencerWrapper)\n","import React from 'react'\nimport Sequencer from './sequencer'\nimport { StepsInput, SequencerState } from './types'\n\ninterface Props {\n  /** Toggles the component in and out. */\n  in: boolean\n  /** Sequence to perform when in becomes true. */\n  inSteps: StepsInput\n  /** Sequence to perform when in becomes false. */\n  outSteps: StepsInput\n  /** Whether or not to run the 'in' sequence when the component mounts. */\n  unmountOnExit: boolean\n  /** If set to true, the child element is removed from the dom when\n   * the out sequence gets to a completed state. Note that your\n   * component will remain mounted for the duration of the last\n   * step before unmounting. */\n  runOnMount: boolean\n}\n\ninterface State {\n  current: string\n  exitComplete: boolean\n}\n\nclass Transition extends React.PureComponent<Props, State> {\n  inSeq: Sequencer\n  outSeq: Sequencer | null\n  static defaultProps = {\n    in: false,\n    unmountOnExit: false,\n    runOnMount: false,\n    outSteps: null\n  }\n\n  constructor(props: Props) {\n    super(props)\n    let current = null\n    this.outSeq = props.outSteps\n      ? new Sequencer({\n          steps: props.outSteps\n        })\n      : null\n    this.inSeq = new Sequencer({\n      steps: props.inSteps\n    })\n\n    if (props.in && props.runOnMount) {\n      this.inSeq.stop()\n      current = this.inSeq.getState().current\n    } else if (!props.in) {\n      if (this.outSeq) {\n        this.outSeq.complete()\n        current = this.outSeq.getState().current\n      } else {\n        this.inSeq.stop()\n        current = this.inSeq.getState().current\n      }\n    } else {\n      this.inSeq.complete()\n      current = this.inSeq.getState().current\n    }\n\n    this.state = {\n      current,\n      exitComplete: !props.in\n    }\n\n    this.inSeq.onChange(this.handleInSeqChange)\n    if (this.outSeq) {\n      this.outSeq.onChange(this.handleOutSeqChange)\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.in && this.props.runOnMount) {\n      this.inSeq.play()\n    }\n  }\n\n  componentWillUnmount() {\n    this.inSeq.stop()\n    if (this.outSeq) {\n      this.outSeq.stop()\n      this.outSeq = null\n    }\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (this.props.in && !nextProps.in) {\n      this.inSeq.stop()\n      if (this.outSeq) {\n        this.outSeq.play()\n      }\n    } else if (!this.props.in && nextProps.in) {\n      if (this.outSeq) {\n        this.outSeq.stop()\n      }\n      this.inSeq.play()\n    }\n  }\n\n  handleInSeqChange = (seq: SequencerState) => {\n    this.setState({\n      current: seq.current,\n      exitComplete: false\n    })\n  }\n\n  handleOutSeqChange = (seq: SequencerState) => {\n    this.setState({\n      current: seq.current,\n      exitComplete: seq.isComplete\n    })\n  }\n\n  render() {\n    const { children, unmountOnExit } = this.props\n    const show = this.props.in\n    const { current, exitComplete } = this.state\n\n    if (unmountOnExit && show === false && exitComplete === true) {\n      return null\n    }\n\n    if (!children) {\n      return null\n    }\n\n    if (typeof children !== 'function') {\n      throw new Error('Child passed into Transition must be a function')\n    }\n\n    return children(current)\n  }\n}\n\nexport default Transition\n"],"names":["tslib_1.__extends","React.createElement","React.Component","React"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAA,IAAY,UAGX;IAHD,WAAY,UAAU;QACpB,kCAAoB,CAAA;QACpB,wCAA0B,CAAA;IAC5B,CAAC,EAHW,UAAU,KAAV,UAAU,QAGrB;;ICDD,IAAI,UAAoB,CAAA;IACxB,IAAI,cAAwB,CAAA;IAE5B,IACE,OAAO,MAAM,KAAK,WAAW;QAC7B,OAAO,MAAM,CAAC,qBAAqB,KAAK,UAAU,EAClD;QACA,UAAU,GAAG,MAAM,CAAC,qBAAqB,CAAA;QACzC,cAAc,GAAG,MAAM,CAAC,oBAAoB,CAAA;KAC7C;SAAM,IAAI,OAAO,UAAU,KAAK,UAAU,EAAE;QAC3C,UAAU,GAAG,UAAC,IAAc,IAAK,OAAA,UAAU,CAAC,IAAI,EAAE,EAAE,CAAC,GAAA,CAAA;QACrD,cAAc,GAAG,YAAY,CAAA;KAC9B;SAAM;QACL,MAAM,IAAI,KAAK,CACb,0GAA0G,CAC3G,CAAA;KACF;IAED;QAKE;YAAA,iBAKC;YAED,cAAS,GAAG;gBACV,IAAI,CAAC,KAAI,CAAC,QAAQ,EAAE;oBAClB,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAA;oBACpB,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;oBAClC,KAAI,CAAC,SAAS,GAAG,UAAU,CAAC,KAAI,CAAC,OAAO,CAAC,CAAA;iBAC1C;aACF,CAAA;YAED,aAAQ,GAAG;gBACT,IAAI,KAAI,CAAC,QAAQ,EAAE;oBACjB,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAA;oBACrB,cAAc,CAAC,KAAI,CAAC,SAAS,CAAC,CAAA;iBAC/B;aACF,CAAA;YAmBD,YAAO,GAAG;gBACR,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;gBAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAClD,IAAM,EAAE,GAAG,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAA;oBAChC,EAAE,CAAC,KAAI,CAAC,gBAAgB,CAAC,CAAA;iBAC1B;gBACD,IAAI,KAAI,CAAC,QAAQ,EAAE;oBACjB,KAAI,CAAC,SAAS,GAAG,UAAU,CAAC,KAAI,CAAC,OAAO,CAAC,CAAA;iBAC1C;aACF,CAAA;YA/CC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;YAClC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAA;YACrB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAA;YACrB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAA;SACxB;QAiBD,uBAAM,GAAN,UAAO,EAAwB;YAC7B,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;gBACnC,IAAI,CAAC,SAAS,EAAE,CAAA;aACjB;YACD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;SAC5B;QAED,wBAAO,GAAP,UAAQ,EAAwB;YAC9B,IAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,EAAE,CAAC,CAAA;YAC5C,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;gBAChB,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAA;aACpC;YACD,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;gBACnC,IAAI,CAAC,QAAQ,EAAE,CAAA;aAChB;SACF;QAYH,aAAC;IAAD,CAAC,IAAA;;IC5DD,IAAM,MAAM,GAAG,IAAI,MAAM,EAAE,CAAA;IAE3B;QAUE,mBAAY,KAAmB;YAA/B,iBAqBC;YA2BO,WAAM,GAAG,UAAC,GAAW;gBAC3B,IAAI,KAAI,CAAC,MAAM,KAAK,UAAU,CAAC,OAAO,EAAE;oBACtC,OAAM;iBACP;gBACD,KAAI,CAAC,aAAa,GAAG,GAAG,GAAG,KAAI,CAAC,SAAS,CAAA;gBACzC,IAAM,WAAW,GAAG,KAAI,CAAC,cAAc,EAAE,CAAA;gBACzC,IAAM,WAAW,GAAG,WAAW,CAAC,MAAM,CAAA;gBAEtC,IAAI,KAAI,CAAC,aAAa,IAAI,WAAW,EAAE;oBACrC,IAAI,KAAI,CAAC,gBAAgB,KAAK,KAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;wBACnD,IAAI,KAAI,CAAC,OAAO,KAAK,OAAO,EAAE;4BAC5B,KAAI,CAAC,IAAI,EAAE,CAAA;4BACX,OAAM;yBACP;wBACD,IAAI,KAAI,CAAC,OAAO,KAAK,KAAK,EAAE;4BAC1B,KAAI,CAAC,QAAQ,EAAE,CAAA;4BACf,OAAM;yBACP;wBACD,IAAI,KAAI,CAAC,OAAO,KAAK,MAAM,EAAE;4BAC3B,KAAI,CAAC,SAAS,GAAG,GAAG,CAAA;4BACpB,KAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAA;yBACxB;qBACF;yBAAM;wBACL,KAAI,CAAC,gBAAgB,EAAE,CAAA;wBACvB,KAAI,CAAC,YAAY,EAAE,CAAA;qBACpB;iBACF;aACF,CAAA;YAmBD,aAAQ,GAAG,UAAC,EAAkB;gBAC5B,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;aAC5B,CAAA;YAED,SAAI,GAAG;gBACL,IAAI,KAAI,CAAC,MAAM,KAAK,UAAU,CAAC,OAAO,EAAE;oBACtC,OAAM;iBACP;gBAED,IAAI,KAAI,CAAC,UAAU,EAAE,EAAE;oBACrB,KAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAA;iBACxB;gBACD,KAAI,CAAC,MAAM,GAAG,UAAU,CAAC,OAAO,CAAA;gBAChC,MAAM,CAAC,MAAM,CAAC,KAAI,CAAC,MAAM,CAAC,CAAA;gBAC1B,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC,gBAAgB,GAAG,KAAI,CAAC,aAAa,CAAA;gBAC7D,KAAI,CAAC,YAAY,EAAE,CAAA;aACpB,CAAA;YAED,UAAK,GAAG;gBACN,IAAI,KAAI,CAAC,MAAM,KAAK,UAAU,CAAC,OAAO,EAAE;oBACtC,KAAI,CAAC,MAAM,GAAG,UAAU,CAAC,IAAI,CAAA;oBAC7B,MAAM,CAAC,OAAO,CAAC,KAAI,CAAC,MAAM,CAAC,CAAA;oBAC3B,KAAI,CAAC,YAAY,EAAE,CAAA;iBACpB;aACF,CAAA;YAED,SAAI,GAAG;gBACL,KAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAA;gBACvB,KAAI,CAAC,MAAM,GAAG,UAAU,CAAC,IAAI,CAAA;gBAC7B,MAAM,CAAC,OAAO,CAAC,KAAI,CAAC,MAAM,CAAC,CAAA;gBAC3B,KAAI,CAAC,YAAY,EAAE,CAAA;aACpB,CAAA;YAED,aAAQ,GAAG;gBACT,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAA;gBAC7C,KAAI,CAAC,aAAa,GAAG,KAAI,CAAC,aAAa,CAAA;gBACvC,KAAI,CAAC,MAAM,GAAG,UAAU,CAAC,IAAI,CAAA;gBAC7B,MAAM,CAAC,OAAO,CAAC,KAAI,CAAC,MAAM,CAAC,CAAA;gBAC3B,KAAI,CAAC,YAAY,EAAE,CAAA;aACpB,CAAA;YAED,eAAU,GAAG;gBACX,OAAO,KAAI,CAAC,aAAa,IAAI,KAAI,CAAC,aAAa,CAAA;aAChD,CAAA;YAED,cAAS,GAAG;gBACV,OAAO,KAAI,CAAC,MAAM,KAAK,UAAU,CAAC,OAAO,CAAA;aAC1C,CAAA;YAED,aAAQ,GAAG,UAAC,QAAgB;gBAC1B,IAAM,SAAS,GAAG,KAAI,CAAC,KAAK,CAAC,SAAS,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,IAAI,KAAK,QAAQ,GAAA,CAAC,CAAA;gBACtE,IAAI,SAAS,KAAK,CAAC,CAAC,EAAE;oBACpB,MAAM,IAAI,KAAK,CAAC,oBAAkB,QAAQ,gBAAa,CAAC,CAAA;iBACzD;gBACD,OAAO,KAAI,CAAC,gBAAgB,GAAG,SAAS,CAAA;aACzC,CAAA;YAED,YAAO,GAAG,UAAC,QAAgB;gBACzB,IAAM,SAAS,GAAG,KAAI,CAAC,KAAK,CAAC,SAAS,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,IAAI,KAAK,QAAQ,GAAA,CAAC,CAAA;gBACtE,IAAI,SAAS,KAAK,CAAC,CAAC,EAAE;oBACpB,MAAM,IAAI,KAAK,CAAC,oBAAkB,QAAQ,gBAAa,CAAC,CAAA;iBACzD;gBACD,OAAO,KAAI,CAAC,gBAAgB,GAAG,SAAS,CAAA;aACzC,CAAA;YAED,aAAQ,GAAG;gBACT,IAAM,KAAK,GAAmB;oBAC5B,OAAO,EAAE,KAAI,CAAC,KAAK,CAAC,KAAI,CAAC,gBAAgB,CAAC,CAAC,IAAI;oBAC/C,KAAK,EAAE,KAAI,CAAC,gBAAgB;oBAC5B,SAAS,EAAE,KAAI,CAAC,SAAS,EAAE;oBAC3B,UAAU,EAAE,KAAI,CAAC,UAAU,EAAE;iBAC9B,CAAA;gBAED,OAAO,KAAK,CAAA;aACb,CAAA;YAvKC,IAAM,QAAQ,GAAY;gBACxB,KAAK,EAAE,EAAE;gBACT,IAAI,EAAE,KAAK;gBACX,QAAQ,EAAE,KAAK;gBACf,OAAO,EAAE,KAAK;aACf,CAAA;YACD,IAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAA;YAClD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;YAC9C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,MAAM,CAAA;YAC7D,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAA;YACzB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAA;YACtB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAA;YAClB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,IAAI,GAAG,MAAM,GAAG,OAAO,CAAC,OAAO,CAAA;YACtD,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,IAAI,CAAA;YAC7B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAA;YACrB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAA;YAEvB,IAAI,OAAO,CAAC,QAAQ,KAAK,IAAI,EAAE;gBAC7B,IAAI,CAAC,QAAQ,EAAE,CAAA;aAChB;SACF;QAEO,iCAAa,GAArB,UAAsB,UAAsB;YAC1C,IAAI,CAAC,UAAU,EAAE;gBACf,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAA;aACnC;YAED,IAAI,IAAI,GAAG,CAAC,CAAA;YAEZ,IAAM,KAAK,GAAG,UAAU,CAAC,GAAG,CAAC,UAAA,IAAI;gBAC/B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;oBAC7C,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAA;iBACnE;gBAED,IAAM,QAAQ,GAAG,IAAI,CAAA;gBACrB,IAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAA;gBAC7B,IAAI,GAAG,MAAM,CAAA;gBACb,OAAO;oBACL,QAAQ,UAAA;oBACR,MAAM,QAAA;oBACN,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;iBACd,CAAA;aACF,CAAC,CAAA;YAEF,OAAO,KAAK,CAAA;SACb;QA+BO,gCAAY,GAApB;YACE,IAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAA;YAE7B,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,UAAA,EAAE;gBAC3B,EAAE,CAAC,KAAK,CAAC,CAAA;aACV,CAAC,CAAA;SACH;QAED,mCAAe,GAAf,UAAgB,KAAa;YAC3B,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAA;YAC7B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAA;SAChD;QAED,kCAAc,GAAd;YACE,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAA;SACzC;QA6EH,gBAAC;IAAD,CAAC,IAAA;;ICzLD,IAAM,cAAc,GAAuB;QACzC,KAAK,EAAE,EAAE;QACT,IAAI,EAAE,KAAK;QACX,OAAO,EAAE,KAAK;QACd,QAAQ,EAAE,KAAK;KAChB,CAAA;IAED,IAAM,aAAa,GAAG,UAAS,OAA4B;QACzD,OAAO,UACL,SAAyC;;YAGzC;oBAAsCA,oCAGrC;oBAOC,0BAAY,KAAe;wBAA3B,YACE,kBAAM,KAAK,CAAC,SASb;wBAkCD,kBAAY,GAAG,UAAC,cAA8B;4BAC5C,IAAM,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,cAAc,EAAE,KAAI,CAAC,MAAM,EAAE,CAAC,CAAA;4BAC9D,KAAI,CAAC,QAAQ,CAAC;gCACZ,SAAS,WAAA;6BACV,CAAC,CAAA;yBACH,CAAA;wBA/CS,IAAA,mBAAK,EAAE,iBAAI,EAAE,yBAAQ,EAAE,uBAAO,CAAU;wBAChD,KAAI,CAAC,SAAS,GAAG,IAAI,SAAS,CAAC,EAAE,KAAK,OAAA,EAAE,IAAI,MAAA,EAAE,QAAQ,UAAA,EAAE,OAAO,SAAA,EAAE,CAAC,CAAA;wBAClE,IAAM,cAAc,GAAG,KAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAA;wBAChD,IAAM,YAAY,GAAG,KAAI,CAAC,MAAM,EAAE,CAAA;wBAClC,KAAI,CAAC,KAAK,GAAG;4BACX,SAAS,EAAE,MAAM,CAAC,MAAM,CAAC,cAAc,EAAE,YAAY,CAAC;yBACvD,CAAA;wBACD,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAI,CAAC,YAAY,CAAC,CAAA;;qBAC3C;oBAED,oDAAyB,GAAzB,UAA0B,SAAmB;wBACrC,IAAA,eAIQ,EAHZ,0CAAkB,EAClB,0CAAkB,EAClB,kDACY,CAAA;wBAEd,IACE,sBAAsB;4BACtB,sBAAsB,CAAC,IAAI,CAAC,KAAK,EAAE,SAAS,CAAC,EAC7C;4BACA,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAA;yBAC1B;wBACD,IAAI,kBAAkB,IAAI,kBAAkB,CAAC,IAAI,CAAC,KAAK,EAAE,SAAS,CAAC,EAAE;4BACnE,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAA;yBACtB;wBACD,IAAI,kBAAkB,IAAI,kBAAkB,CAAC,IAAI,CAAC,KAAK,EAAE,SAAS,CAAC,EAAE;4BACnE,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAA;yBACtB;qBACF;oBAED,iCAAM,GAAN;wBACE,OAAO;4BACL,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI;4BACzB,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI;4BACzB,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK;4BAC3B,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ;4BACjC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ;4BACjC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO;yBAChC,CAAA;qBACF;oBASD,iCAAM,GAAN;wBACE,IAAM,eAQQ,EAPZ,gBAAK,EACL,cAAI,EACJ,sBAAQ,EACR,0CAAkB,EAClB,0CAAkB,EAClB,kDAAsB,EACtB,uHACY,CAAA;wBAEd,OAAOC,oBAAC,SAAS,eAAK,KAAY,IAAE,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,IAAI,CAAA;qBACxE;oBACH,uBAAC;iBAAA,CA1EqCC,eAAe;gBAM5C,eAAY,GAAG,OAAO;sBACzB,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,cAAc,EAAE,OAAO,CAAC;sBAC1C,cAAc;mBAkEnB;SACF,CAAA;IACH,CAAC,CAAA;;IC1FD,IAAM,gBAAgB,GAAmC,UAAC,EAGzD;YAFC,sBAAQ,EACR,wBAAS;QACL,OAAA,QAAQ,CAAC,SAAS,CAAC;IAAnB,CAAmB,CAAA;AAEzB,2BAAe,aAAa,EAAE,CAAC,gBAAgB,CAAC,CAAA;;ICYhD;QAAyBF,8BAAiC;QAUxD,oBAAY,KAAY;YAAxB,YACE,kBAAM,KAAK,CAAC,SAoCb;YA8BD,uBAAiB,GAAG,UAAC,GAAmB;gBACtC,KAAI,CAAC,QAAQ,CAAC;oBACZ,OAAO,EAAE,GAAG,CAAC,OAAO;oBACpB,YAAY,EAAE,KAAK;iBACpB,CAAC,CAAA;aACH,CAAA;YAED,wBAAkB,GAAG,UAAC,GAAmB;gBACvC,KAAI,CAAC,QAAQ,CAAC;oBACZ,OAAO,EAAE,GAAG,CAAC,OAAO;oBACpB,YAAY,EAAE,GAAG,CAAC,UAAU;iBAC7B,CAAC,CAAA;aACH,CAAA;YA7EC,IAAI,OAAO,GAAG,IAAI,CAAA;YAClB,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC,QAAQ;kBACxB,IAAI,SAAS,CAAC;oBACZ,KAAK,EAAE,KAAK,CAAC,QAAQ;iBACtB,CAAC;kBACF,IAAI,CAAA;YACR,KAAI,CAAC,KAAK,GAAG,IAAI,SAAS,CAAC;gBACzB,KAAK,EAAE,KAAK,CAAC,OAAO;aACrB,CAAC,CAAA;YAEF,IAAI,KAAK,CAAC,EAAE,IAAI,KAAK,CAAC,UAAU,EAAE;gBAChC,KAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAA;gBACjB,OAAO,GAAG,KAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAA;aACxC;iBAAM,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE;gBACpB,IAAI,KAAI,CAAC,MAAM,EAAE;oBACf,KAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAA;oBACtB,OAAO,GAAG,KAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAA;iBACzC;qBAAM;oBACL,KAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAA;oBACjB,OAAO,GAAG,KAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAA;iBACxC;aACF;iBAAM;gBACL,KAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAA;gBACrB,OAAO,GAAG,KAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAA;aACxC;YAED,KAAI,CAAC,KAAK,GAAG;gBACX,OAAO,SAAA;gBACP,YAAY,EAAE,CAAC,KAAK,CAAC,EAAE;aACxB,CAAA;YAED,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAI,CAAC,iBAAiB,CAAC,CAAA;YAC3C,IAAI,KAAI,CAAC,MAAM,EAAE;gBACf,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAI,CAAC,kBAAkB,CAAC,CAAA;aAC9C;;SACF;QAED,sCAAiB,GAAjB;YACE,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE;gBAC1C,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAA;aAClB;SACF;QAED,yCAAoB,GAApB;YACE,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAA;YACjB,IAAI,IAAI,CAAC,MAAM,EAAE;gBACf,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAA;gBAClB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAA;aACnB;SACF;QAED,8CAAyB,GAAzB,UAA0B,SAAgB;YACxC,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE;gBAClC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAA;gBACjB,IAAI,IAAI,CAAC,MAAM,EAAE;oBACf,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAA;iBACnB;aACF;iBAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,SAAS,CAAC,EAAE,EAAE;gBACzC,IAAI,IAAI,CAAC,MAAM,EAAE;oBACf,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAA;iBACnB;gBACD,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAA;aAClB;SACF;QAgBD,2BAAM,GAAN;YACQ,IAAA,eAAwC,EAAtC,sBAAQ,EAAE,gCAA4B,CAAA;YAC9C,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAA;YACpB,IAAA,eAAsC,EAApC,oBAAO,EAAE,8BAA2B,CAAA;YAE5C,IAAI,aAAa,IAAI,IAAI,KAAK,KAAK,IAAI,YAAY,KAAK,IAAI,EAAE;gBAC5D,OAAO,IAAI,CAAA;aACZ;YAED,IAAI,CAAC,QAAQ,EAAE;gBACb,OAAO,IAAI,CAAA;aACZ;YAED,IAAI,OAAO,QAAQ,KAAK,UAAU,EAAE;gBAClC,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAA;aACnE;YAED,OAAO,QAAQ,CAAC,OAAO,CAAC,CAAA;SACzB;QA1GM,uBAAY,GAAG;YACpB,EAAE,EAAE,KAAK;YACT,aAAa,EAAE,KAAK;YACpB,UAAU,EAAE,KAAK;YACjB,QAAQ,EAAE,IAAI;SACf,CAAA;QAsGH,iBAAC;KA9GD,CAAyBG,cAAK,CAAC,aAAa,GA8G3C;;;;;;;;;;;;;;"}