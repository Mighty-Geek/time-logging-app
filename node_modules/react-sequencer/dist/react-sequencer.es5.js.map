{"version":3,"file":"react-sequencer.es5.js","sources":["../src/types.ts","../src/ticker.ts","../src/sequencer.ts","../src/with-sequencer.tsx","../src/sequencer-wrapper.tsx","../src/transition.tsx"],"sourcesContent":["export enum PlayStatus {\n  IDLE = 'STATUS_IDLE',\n  PLAYING = 'STATUS_PLAYING'\n}\n\nexport type EndMode = 'loop' | 'end' | 'start'\n\n/**** Ticker */\n\nexport type TickerNotifyFunction = (timestamp: number) => void\n\n/**** Sequencer */\n\nexport type StepInput = [string, number]\n\nexport type StepsInput = Array<StepInput>\n\nexport interface OptionsInput {\n  steps: StepsInput\n  loop?: boolean\n  complete?: boolean\n  endMode?: EndMode\n}\n\nexport interface Options {\n  steps: StepsInput\n  loop: boolean\n  complete: boolean\n  endMode: EndMode\n}\n\nexport interface Step {\n  startPos: number\n  endPos: number\n  name: string\n}\n\nexport type Steps = Array<Step>\n\nexport type NotifyFunction = (state: SequencerState) => void\n\nexport type Subscriptions = Array<NotifyFunction>\n\nexport interface SequencerState {\n  current: string\n  index: number\n  isPlaying: boolean\n  isComplete: boolean\n}\n\n/*** WithSequencer */\n\nexport interface WithSequencerProps extends OptionsInput {\n  shouldPlayOnUpdate?: { (currProps: any, nextProps: any): boolean }\n  shouldStopOnUpdate?: { (currProps: any, nextProps: any): boolean }\n  shouldCompleteOnUpdate?: { (currProps: any, nextProps: any): boolean }\n}\n\nexport interface InjectedAPI {\n  play(): void\n  complete(): void\n  stop(): void\n  pause(): void\n  isBefore(name: string): boolean\n  isAfter(name: string): boolean\n}\n\nexport interface InjectedProps {\n  sequencer: InjectedAPI & SequencerState\n}\n","import { TickerNotifyFunction } from './types'\n\nlet onNextTick: Function\nlet cancelNextTick: Function\n\nif (\n  typeof window !== 'undefined' &&\n  typeof window.requestAnimationFrame === 'function'\n) {\n  onNextTick = window.requestAnimationFrame\n  cancelNextTick = window.cancelAnimationFrame\n} else if (typeof setTimeout === 'function') {\n  onNextTick = (func: Function) => setTimeout(func, 15)\n  cancelNextTick = clearTimeout\n} else {\n  throw new Error(\n    'React sequencer depends on requestAnimationFrame, please use a polyfill if not available in the browser.'\n  )\n}\n\nclass Ticker {\n  currentTimeStamp: number\n  isActive: boolean\n  requestID: string | null\n  subscriptions: Array<TickerNotifyFunction>\n  constructor() {\n    this.currentTimeStamp = Date.now()\n    this.isActive = false\n    this.requestID = null\n    this.subscriptions = []\n  }\n\n  startLoop = () => {\n    if (!this.isActive) {\n      this.isActive = true\n      this.currentTimeStamp = Date.now()\n      this.requestID = onNextTick(this._onLoop)\n    }\n  }\n\n  stopLoop = () => {\n    if (this.isActive) {\n      this.isActive = false\n      cancelNextTick(this.requestID)\n    }\n  }\n\n  onTick(fn: TickerNotifyFunction) {\n    if (this.subscriptions.length === 0) {\n      this.startLoop()\n    }\n    this.subscriptions.push(fn)\n  }\n\n  offTick(fn: TickerNotifyFunction) {\n    const index = this.subscriptions.indexOf(fn)\n    if (index !== -1) {\n      this.subscriptions.splice(index, 1)\n    }\n    if (this.subscriptions.length === 0) {\n      this.stopLoop()\n    }\n  }\n\n  _onLoop = () => {\n    this.currentTimeStamp = Date.now()\n    for (let i = 0; i < this.subscriptions.length; i++) {\n      const fn = this.subscriptions[i]\n      fn(this.currentTimeStamp)\n    }\n    if (this.isActive) {\n      this.requestID = onNextTick(this._onLoop)\n    }\n  }\n}\n\nexport default Ticker\n","import {\n  PlayStatus,\n  StepsInput,\n  Steps,\n  OptionsInput,\n  Subscriptions,\n  SequencerState,\n  NotifyFunction,\n  EndMode,\n  Options\n} from './types'\n\nimport Ticker from './ticker'\n\nconst ticker = new Ticker()\n\nclass Sequencer {\n  steps: Steps\n  currentStepIndex: number\n  currentTimeIn: number\n  totalDuration: number\n  endMode: EndMode\n  status: PlayStatus\n  requestID: string | null\n  subscriptions: Subscriptions\n  startedAt: number\n  constructor(props: OptionsInput) {\n    const defaults: Options = {\n      steps: [],\n      loop: false,\n      complete: false,\n      endMode: 'end'\n    }\n    const options = Object.assign({}, defaults, props)\n    this.steps = this.generateSteps(options.steps)\n    this.totalDuration = this.steps[this.steps.length - 1].endPos\n    this.currentStepIndex = 0\n    this.currentTimeIn = 0\n    this.startedAt = 0\n    this.endMode = options.loop ? 'loop' : options.endMode\n    this.status = PlayStatus.IDLE\n    this.requestID = null\n    this.subscriptions = []\n\n    if (options.complete === true) {\n      this.complete()\n    }\n  }\n\n  private generateSteps(stepsInput: StepsInput): Steps {\n    if (!stepsInput) {\n      throw new Error('Invalid format.')\n    }\n\n    let prev = 0\n\n    const steps = stepsInput.map(step => {\n      if (!Array.isArray(step) || step.length !== 2) {\n        throw new Error('Invalid format. See docs for correct structure.')\n      }\n\n      const startPos = prev\n      const endPos = step[1] + prev\n      prev = endPos\n      return {\n        startPos,\n        endPos,\n        name: step[0]\n      }\n    })\n\n    return steps\n  }\n\n  private onLoop = (now: number) => {\n    if (this.status !== PlayStatus.PLAYING) {\n      return\n    }\n    this.currentTimeIn = now - this.startedAt\n    const currentStep = this.getCurrentStep()\n    const completesAt = currentStep.endPos\n\n    if (this.currentTimeIn >= completesAt) {\n      if (this.currentStepIndex === this.steps.length - 1) {\n        if (this.endMode === 'start') {\n          this.stop()\n          return\n        }\n        if (this.endMode === 'end') {\n          this.complete()\n          return\n        }\n        if (this.endMode === 'loop') {\n          this.startedAt = now\n          this.goToStepByIndex(0)\n        }\n      } else {\n        this.currentStepIndex++\n        this.notifyChange()\n      }\n    }\n  }\n\n  private notifyChange(): void {\n    const state = this.getState()\n\n    this.subscriptions.forEach(fn => {\n      fn(state)\n    })\n  }\n\n  goToStepByIndex(index: number) {\n    this.currentStepIndex = index\n    this.currentTimeIn = this.steps[index].startPos\n  }\n\n  getCurrentStep() {\n    return this.steps[this.currentStepIndex]\n  }\n\n  onChange = (fn: NotifyFunction) => {\n    this.subscriptions.push(fn)\n  }\n\n  play = () => {\n    if (this.status === PlayStatus.PLAYING) {\n      return\n    }\n\n    if (this.isComplete()) {\n      this.goToStepByIndex(0)\n    }\n    this.status = PlayStatus.PLAYING\n    ticker.onTick(this.onLoop)\n    this.startedAt = ticker.currentTimeStamp - this.currentTimeIn\n    this.notifyChange()\n  }\n\n  pause = () => {\n    if (this.status === PlayStatus.PLAYING) {\n      this.status = PlayStatus.IDLE\n      ticker.offTick(this.onLoop)\n      this.notifyChange()\n    }\n  }\n\n  stop = () => {\n    this.goToStepByIndex(0)\n    this.status = PlayStatus.IDLE\n    ticker.offTick(this.onLoop)\n    this.notifyChange()\n  }\n\n  complete = () => {\n    this.currentStepIndex = this.steps.length - 1\n    this.currentTimeIn = this.totalDuration\n    this.status = PlayStatus.IDLE\n    ticker.offTick(this.onLoop)\n    this.notifyChange()\n  }\n\n  isComplete = () => {\n    return this.currentTimeIn >= this.totalDuration\n  }\n\n  isPlaying = () => {\n    return this.status === PlayStatus.PLAYING\n  }\n\n  isBefore = (stepName: string): boolean => {\n    const stepIndex = this.steps.findIndex(step => step.name === stepName)\n    if (stepIndex === -1) {\n      throw new Error(`Sequencer step ${stepName} not found.`)\n    }\n    return this.currentStepIndex < stepIndex\n  }\n\n  isAfter = (stepName: string): boolean => {\n    const stepIndex = this.steps.findIndex(step => step.name === stepName)\n    if (stepIndex === -1) {\n      throw new Error(`Sequencer step ${stepName} not found.`)\n    }\n    return this.currentStepIndex > stepIndex\n  }\n\n  getState = () => {\n    const state: SequencerState = {\n      current: this.steps[this.currentStepIndex].name,\n      index: this.currentStepIndex,\n      isPlaying: this.isPlaying(),\n      isComplete: this.isComplete()\n    }\n\n    return state\n  }\n}\n\nexport default Sequencer\n","import * as React from 'react'\nimport Sequencer from './sequencer'\nimport {\n  WithSequencerProps,\n  SequencerState,\n  InjectedAPI,\n  InjectedProps\n} from './types'\nimport { Subtract } from 'utility-types'\n\nconst defaultOptions: WithSequencerProps = {\n  steps: [],\n  loop: false,\n  endMode: 'end',\n  complete: false\n}\n\nconst withSequencer = function(options?: WithSequencerProps) {\n  return function<BaseProps extends InjectedProps>(\n    Component: React.ComponentType<BaseProps>\n  ) {\n    type HocProps = Subtract<BaseProps, InjectedProps> & WithSequencerProps\n    return class SequencerWrapper extends React.Component<\n      HocProps,\n      InjectedProps\n    > {\n      sequencer: Sequencer\n\n      static defaultProps = options\n        ? Object.assign({}, defaultOptions, options)\n        : defaultOptions\n\n      constructor(props: HocProps) {\n        super(props)\n        const { steps, loop, complete, endMode } = props\n        this.sequencer = new Sequencer({ steps, loop, complete, endMode })\n        const sequencerState = this.sequencer.getState()\n        const sequencerApi = this.getApi()\n        this.state = {\n          sequencer: Object.assign(sequencerState, sequencerApi)\n        }\n        this.sequencer.onChange(this.handleChange)\n      }\n\n      componentWillReceiveProps(nextProps: HocProps) {\n        const {\n          shouldPlayOnUpdate,\n          shouldStopOnUpdate,\n          shouldCompleteOnUpdate\n        } = this.props\n\n        if (\n          shouldCompleteOnUpdate &&\n          shouldCompleteOnUpdate(this.props, nextProps)\n        ) {\n          this.sequencer.complete()\n        }\n        if (shouldStopOnUpdate && shouldStopOnUpdate(this.props, nextProps)) {\n          this.sequencer.stop()\n        }\n        if (shouldPlayOnUpdate && shouldPlayOnUpdate(this.props, nextProps)) {\n          this.sequencer.play()\n        }\n      }\n\n      getApi(): InjectedAPI {\n        return {\n          play: this.sequencer.play,\n          stop: this.sequencer.stop,\n          pause: this.sequencer.pause,\n          complete: this.sequencer.complete,\n          isBefore: this.sequencer.isBefore,\n          isAfter: this.sequencer.isAfter\n        }\n      }\n\n      handleChange = (sequencerState: SequencerState) => {\n        const sequencer = Object.assign(sequencerState, this.getApi())\n        this.setState({\n          sequencer\n        })\n      }\n\n      render() {\n        const {\n          steps,\n          loop,\n          complete,\n          shouldPlayOnUpdate,\n          shouldStopOnUpdate,\n          shouldCompleteOnUpdate,\n          ...props\n        } = this.props\n\n        return <Component {...props as any} sequencer={this.state.sequencer} />\n      }\n    }\n  }\n}\n\nexport default withSequencer\n","import React, { ReactElement } from 'react'\nimport withSequencer from './with-sequencer'\nimport { SequencerState, InjectedAPI, InjectedProps } from './types'\n\ninterface Props extends InjectedProps {\n  children(sequencer: InjectedAPI & SequencerState): ReactElement\n}\n\nconst SequencerWrapper: React.FunctionComponent<Props> = ({\n  children,\n  sequencer\n}) => children(sequencer)\n\nexport default withSequencer()(SequencerWrapper)\n","import React from 'react'\nimport Sequencer from './sequencer'\nimport { StepsInput, SequencerState } from './types'\n\ninterface Props {\n  /** Toggles the component in and out. */\n  in: boolean\n  /** Sequence to perform when in becomes true. */\n  inSteps: StepsInput\n  /** Sequence to perform when in becomes false. */\n  outSteps: StepsInput\n  /** Whether or not to run the 'in' sequence when the component mounts. */\n  unmountOnExit: boolean\n  /** If set to true, the child element is removed from the dom when\n   * the out sequence gets to a completed state. Note that your\n   * component will remain mounted for the duration of the last\n   * step before unmounting. */\n  runOnMount: boolean\n}\n\ninterface State {\n  current: string\n  exitComplete: boolean\n}\n\nclass Transition extends React.PureComponent<Props, State> {\n  inSeq: Sequencer\n  outSeq: Sequencer | null\n  static defaultProps = {\n    in: false,\n    unmountOnExit: false,\n    runOnMount: false,\n    outSteps: null\n  }\n\n  constructor(props: Props) {\n    super(props)\n    let current = null\n    this.outSeq = props.outSteps\n      ? new Sequencer({\n          steps: props.outSteps\n        })\n      : null\n    this.inSeq = new Sequencer({\n      steps: props.inSteps\n    })\n\n    if (props.in && props.runOnMount) {\n      this.inSeq.stop()\n      current = this.inSeq.getState().current\n    } else if (!props.in) {\n      if (this.outSeq) {\n        this.outSeq.complete()\n        current = this.outSeq.getState().current\n      } else {\n        this.inSeq.stop()\n        current = this.inSeq.getState().current\n      }\n    } else {\n      this.inSeq.complete()\n      current = this.inSeq.getState().current\n    }\n\n    this.state = {\n      current,\n      exitComplete: !props.in\n    }\n\n    this.inSeq.onChange(this.handleInSeqChange)\n    if (this.outSeq) {\n      this.outSeq.onChange(this.handleOutSeqChange)\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.in && this.props.runOnMount) {\n      this.inSeq.play()\n    }\n  }\n\n  componentWillUnmount() {\n    this.inSeq.stop()\n    if (this.outSeq) {\n      this.outSeq.stop()\n      this.outSeq = null\n    }\n  }\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (this.props.in && !nextProps.in) {\n      this.inSeq.stop()\n      if (this.outSeq) {\n        this.outSeq.play()\n      }\n    } else if (!this.props.in && nextProps.in) {\n      if (this.outSeq) {\n        this.outSeq.stop()\n      }\n      this.inSeq.play()\n    }\n  }\n\n  handleInSeqChange = (seq: SequencerState) => {\n    this.setState({\n      current: seq.current,\n      exitComplete: false\n    })\n  }\n\n  handleOutSeqChange = (seq: SequencerState) => {\n    this.setState({\n      current: seq.current,\n      exitComplete: seq.isComplete\n    })\n  }\n\n  render() {\n    const { children, unmountOnExit } = this.props\n    const show = this.props.in\n    const { current, exitComplete } = this.state\n\n    if (unmountOnExit && show === false && exitComplete === true) {\n      return null\n    }\n\n    if (!children) {\n      return null\n    }\n\n    if (typeof children !== 'function') {\n      throw new Error('Child passed into Transition must be a function')\n    }\n\n    return children(current)\n  }\n}\n\nexport default Transition\n"],"names":["Component","tslib_1.__extends","React.createElement","React.Component","React"],"mappings":"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"}