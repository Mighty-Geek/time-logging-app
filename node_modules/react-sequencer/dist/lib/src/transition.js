"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
var sequencer_1 = __importDefault(require("./sequencer"));
var Transition = /** @class */ (function (_super) {
    __extends(Transition, _super);
    function Transition(props) {
        var _this = _super.call(this, props) || this;
        _this.handleInSeqChange = function (seq) {
            _this.setState({
                current: seq.current,
                exitComplete: false
            });
        };
        _this.handleOutSeqChange = function (seq) {
            _this.setState({
                current: seq.current,
                exitComplete: seq.isComplete
            });
        };
        var current = null;
        _this.outSeq = props.outSteps
            ? new sequencer_1.default({
                steps: props.outSteps
            })
            : null;
        _this.inSeq = new sequencer_1.default({
            steps: props.inSteps
        });
        if (props.in && props.runOnMount) {
            _this.inSeq.stop();
            current = _this.inSeq.getState().current;
        }
        else if (!props.in) {
            if (_this.outSeq) {
                _this.outSeq.complete();
                current = _this.outSeq.getState().current;
            }
            else {
                _this.inSeq.stop();
                current = _this.inSeq.getState().current;
            }
        }
        else {
            _this.inSeq.complete();
            current = _this.inSeq.getState().current;
        }
        _this.state = {
            current: current,
            exitComplete: !props.in
        };
        _this.inSeq.onChange(_this.handleInSeqChange);
        if (_this.outSeq) {
            _this.outSeq.onChange(_this.handleOutSeqChange);
        }
        return _this;
    }
    Transition.prototype.componentDidMount = function () {
        if (this.props.in && this.props.runOnMount) {
            this.inSeq.play();
        }
    };
    Transition.prototype.componentWillUnmount = function () {
        this.inSeq.stop();
        if (this.outSeq) {
            this.outSeq.stop();
            this.outSeq = null;
        }
    };
    Transition.prototype.componentWillReceiveProps = function (nextProps) {
        if (this.props.in && !nextProps.in) {
            this.inSeq.stop();
            if (this.outSeq) {
                this.outSeq.play();
            }
        }
        else if (!this.props.in && nextProps.in) {
            if (this.outSeq) {
                this.outSeq.stop();
            }
            this.inSeq.play();
        }
    };
    Transition.prototype.render = function () {
        var _a = this.props, children = _a.children, unmountOnExit = _a.unmountOnExit;
        var show = this.props.in;
        var _b = this.state, current = _b.current, exitComplete = _b.exitComplete;
        if (unmountOnExit && show === false && exitComplete === true) {
            return null;
        }
        if (!children) {
            return null;
        }
        if (typeof children !== 'function') {
            throw new Error('Child passed into Transition must be a function');
        }
        return children(current);
    };
    Transition.defaultProps = {
        in: false,
        unmountOnExit: false,
        runOnMount: false,
        outSteps: null
    };
    return Transition;
}(react_1.default.PureComponent));
exports.default = Transition;
//# sourceMappingURL=transition.js.map