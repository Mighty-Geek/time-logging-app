"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
var sequencer_1 = __importDefault(require("./sequencer"));
var defaultOptions = {
    steps: [],
    loop: false,
    endMode: 'end',
    complete: false
};
var withSequencer = function (options) {
    return function (Component) {
        var _a;
        return _a = /** @class */ (function (_super) {
                __extends(SequencerWrapper, _super);
                function SequencerWrapper(props) {
                    var _this = _super.call(this, props) || this;
                    _this.handleChange = function (sequencerState) {
                        var sequencer = Object.assign(sequencerState, _this.getApi());
                        _this.setState({
                            sequencer: sequencer
                        });
                    };
                    var steps = props.steps, loop = props.loop, complete = props.complete, endMode = props.endMode;
                    _this.sequencer = new sequencer_1.default({ steps: steps, loop: loop, complete: complete, endMode: endMode });
                    var sequencerState = _this.sequencer.getState();
                    var sequencerApi = _this.getApi();
                    _this.state = {
                        sequencer: Object.assign(sequencerState, sequencerApi)
                    };
                    _this.sequencer.onChange(_this.handleChange);
                    return _this;
                }
                SequencerWrapper.prototype.componentWillReceiveProps = function (nextProps) {
                    var _a = this.props, shouldPlayOnUpdate = _a.shouldPlayOnUpdate, shouldStopOnUpdate = _a.shouldStopOnUpdate, shouldCompleteOnUpdate = _a.shouldCompleteOnUpdate;
                    if (shouldCompleteOnUpdate &&
                        shouldCompleteOnUpdate(this.props, nextProps)) {
                        this.sequencer.complete();
                    }
                    if (shouldStopOnUpdate && shouldStopOnUpdate(this.props, nextProps)) {
                        this.sequencer.stop();
                    }
                    if (shouldPlayOnUpdate && shouldPlayOnUpdate(this.props, nextProps)) {
                        this.sequencer.play();
                    }
                };
                SequencerWrapper.prototype.getApi = function () {
                    return {
                        play: this.sequencer.play,
                        stop: this.sequencer.stop,
                        pause: this.sequencer.pause,
                        complete: this.sequencer.complete,
                        isBefore: this.sequencer.isBefore,
                        isAfter: this.sequencer.isAfter
                    };
                };
                SequencerWrapper.prototype.render = function () {
                    var _a = this.props, steps = _a.steps, loop = _a.loop, complete = _a.complete, shouldPlayOnUpdate = _a.shouldPlayOnUpdate, shouldStopOnUpdate = _a.shouldStopOnUpdate, shouldCompleteOnUpdate = _a.shouldCompleteOnUpdate, props = __rest(_a, ["steps", "loop", "complete", "shouldPlayOnUpdate", "shouldStopOnUpdate", "shouldCompleteOnUpdate"]);
                    return React.createElement(Component, __assign({}, props, { sequencer: this.state.sequencer }));
                };
                return SequencerWrapper;
            }(React.Component)),
            _a.defaultProps = options
                ? Object.assign({}, defaultOptions, options)
                : defaultOptions,
            _a;
    };
};
exports.default = withSequencer;
//# sourceMappingURL=with-sequencer.js.map